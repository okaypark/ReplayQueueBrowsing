plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'solace.test'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral() // 기본 Maven Central Repository
	maven {
		url "https://solace.myget.org/F/releases-java/maven/" // Solace MyGet Repository 추가
	}
}

ext {
	set('solaceSpringBootVersion', "2.2.0")
}

dependencies {
	// Spring Boot Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring Boot JMS
	implementation 'org.springframework.boot:spring-boot-starter-activemq'



	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'


	//////////
	// Solace Messaging API for JMS Dependencies
	implementation group: 'com.solacesystems', name:'sol-jms', version: '[10.25.0,)'
	implementation group: 'javax.jms', name: 'javax.jms-api', version: '2.0.1'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.+'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.+'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.+'

	//OpenTelemetry dependency
	implementation group: 'io.opentelemetry', name: 'opentelemetry-exporter-otlp', version: '1.+'
	implementation group: 'io.opentelemetry.semconv', name: 'opentelemetry-semconv', version: '1.+'

	//Solace OpenTelemetry Integration for JMS
	implementation group: 'com.solace', name: 'solace-opentelemetry-jms-integration', version: '1.1.0'

	// For any local libs that are not available from mavenCentral
	implementation fileTree(dir: 'libs', include: ['*.jar'])

}

dependencyManagement {
	imports {
		mavenBom "com.solace.spring.boot:solace-spring-boot-bom:${solaceSpringBootVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
